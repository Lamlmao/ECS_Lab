Using Code Pipeline, Code Commit, Code Build, Code Deploy tho ECS ECR
 - Create repo Code Commit (Or using Github Repo)
 - Create IAM roles (CodeCommitFullAccess,CodeCommitPowerUser, ECS_FullAccess, AdministratorAccess)
 - Create ECR
 - Create ECS (Fargate or EC2) 
    + Create Task Definition (Container Name same as Repo is best practice)
    + Create Service to deploy a task in Cluster
    so 
    + Check Security Groups, Add rules to connect to internet
 - Create CodeBuild for CI Phase. Write YAML files for Code Build, name "buildspec.yaml". Remember to assign the role above. 
   After the build, Store the Images in ECR
 - Create CodePipeline, Create a IAM roles for it. Write a pipeline for it

    "vgw_arn" = null
    "vgw_id" = null
    "vpc_arn" = "arn:aws:ec2:us-east-1:533267039062:vpc/vpc-0c63216e09d936750"
    "vpc_cidr_block" = "10.0.0.0/16"
    "vpc_enable_dns_hostnames" = true
    "vpc_enable_dns_support" = true
    "vpc_flow_log_cloudwatch_iam_role_arn" = ""
    "vpc_flow_log_deliver_cross_account_role" = null
    "vpc_flow_log_destination_arn" = ""
    "vpc_flow_log_destination_type" = "cloud-watch-logs"
    "vpc_flow_log_id" = null
    "vpc_id" = "vpc-0c63216e09d936750"
    "vpc_instance_tenancy" = "default"
    "vpc_ipv6_association_id" = ""
    "vpc_ipv6_cidr_block" = ""
    "vpc_main_route_table_id" = "rtb-0c70589654e9912af"
    "vpc_owner_id" = "533267039062"
    "vpc_secondary_cidr_blocks" = tolist([])